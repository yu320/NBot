name: CI/CD to TrueNAS via GHCR

on:
  push:
    # 設置在推送到 main 分支時觸發工作流程
    branches:
      - main
  workflow_dispatch:
    # 允許手動從 GitHub Actions 介面觸發部署

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    # 【修正 GHCR 權限錯誤的關鍵】
    # 授予 GITHUB_TOKEN 寫入 packages 的權限
    permissions:
      contents: read     # 讀取倉庫內容 (用於 Checkout)
      packages: write    # 寫入 packages (用於推送 GHCR 映像檔)

    env:
      IMAGE_NAME: nbot-discord
      # 修正：確保語法正確
      GHCR_REPO: ghcr.io/${{ github.repository_owner }}/nbot-discord 
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- 1. GHCR 登入與設定 (使用 GITHUB_TOKEN) ---
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # 使用 GitHub Actions 提供的內建權杖進行驗證
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # --- 2. 建構並推送 Docker 映像檔到 GHCR ---
      - name: Build and Push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.GHCR_REPO }}:latest
            ${{ env.GHCR_REPO }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- 3. 部署到 TrueNAS (透過 SSH 執行 Docker 更新指令) ---
      - name: Deploy to TrueNAS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          # SSH 連線資訊來自 GitHub Secrets
          host: ${{ secrets.TRUENAS_HOST }}
          username: ${{ secrets.TRUENAS_USER }}
          key: ${{ secrets.TRUENAS_SSH_KEY }}
          script: |
            # 遠端伺服器上的部署腳本
            
            echo "--- 1. 拉取最新映像檔 ---"
            docker pull ${{ env.GHCR_REPO }}:latest

            echo "--- 2. 停止並移除舊容器 ---"
            # 假設容器名稱為 nbot
            docker stop nbot || true
            docker rm nbot || true

            echo "--- 3. 啟動新容器並傳遞環境變數 ---"
            # 確保 Discord/Uptime Kuma 環境變數被傳遞
            docker run -d \
              --name nbot \
              --restart unless-stopped \
              -e DISCORD_TOKEN='${{ secrets.DISCORD_TOKEN }}' \
              -e CHANNEL_ID='${{ secrets.CHANNEL_ID }}' \
              -e UPTIME_KUMA_URL='${{ secrets.UPTIME_KUMA_URL }}' \
              ${{ env.GHCR_REPO }}:latest

            echo "--- 4. 部署完成 ---"