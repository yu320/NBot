name: CI/CD to TrueNAS via GHCR

on:
  push:
    branches:
      - main
    # 【*** 關鍵修改在此處！***】
    paths:
      # 1. 當專案根目錄下的 'src/' 資料夾內任何檔案有變動時觸發
      - 'src/**'
      # 2. 當專案根目錄下的 Dockerfile 有變動時觸發
      - 'cmds/**'
      # 3. 當專案根目錄下的 docker-compose.yml 有變動時觸發
      - 'bot.py'
      # 4. 如果您還有其他相關的設定檔，也可以列在這邊
      # - 'config.ini'
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    env:
      IMAGE_NAME: nbot-discord
      # 這是我們在 GHA Runner 中定義的變數
      GHCR_REPO: ghcr.io/${{ github.repository_owner }}/nbot-discord 
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- 1. & 2. 登入、建置、推送 (這部分保持不變) ---
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }} 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.GHCR_REPO }}:latest
            ${{ env.GHCR_REPO }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- 3. 部署到 TrueNAS (*** 這部分已修改 ***) ---
      - name: Deploy to TrueNAS via SSH
        uses: appleboy/ssh-action@v1.0.3
        
        # 這些變數是給 docker compose up -d 使用的
        env:
          TOKEN: ${{ secrets.DISCORD_TOKEN }}
          CHAN_ID: ${{ secrets.CHANNEL_ID }}
          KUMA_URL: ${{ secrets.UPTIME_KUMA_URL }}
          MUSIC_CHAN_ID: ${{ secrets.MUSIC_CHANNEL_ID }}
          # 我們不再需要 GHCR_REPO_URL 了

        with:
          host: ${{ secrets.TRUENAS_HOST }}
          username: ${{ secrets.TRUENAS_USER }}
          key: ${{ secrets.TRUENAS_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }} 
          
          script: |
            # 導航到您的 docker-compose.yml 檔案所在的目錄
            cd /mnt/nas/apps/Dockge/Stacks/discord_bot/
            
            echo "--- 1. 拉取最新映像檔 ---"
            # 【*** 關鍵修正 ***】
            # 我們不再使用 $GHCR_REPO_URL 變數
            # 而是直接使用 GHA 語法 ${{ env.GHCR_REPO }} 將名稱嵌入
            docker pull ${{ env.GHCR_REPO }}:latest
            
            echo "--- 2. 使用 docker compose 重新啟動服務 ---"
            docker compose up -d

            echo "--- 3. 清理舊映像檔 (可選) ---"
            docker image prune -f

            echo "--- 4. 部署完成 ---"
